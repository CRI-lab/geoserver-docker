version: '3.9'

volumes:
   geoserver-data:
   geo-db-data:

services:
   db:
      image: kartoza/postgis:${POSTGIS_VERSION_TAG}
      volumes:
        - geo-db-data:/var/lib/postgresql
      ports:
        - ${POSTGRES_PORT}:5432
      environment:
        - POSTGRES_DB=POSTGRES
        - POSTGRES_USER=docker
        - POSTGRES_PASS=docker
        - ALLOW_IP_RANGE=128.171.159.0/24
        - FORCE_SSL=TRUE
      restart: on-failure
      healthcheck:
        test: "PGPASSWORD=${POSTGRES_PASS} pg_isready -h 127.0.0.1 -U docker -d gis"

   geoserver:
      image: kartoza/geoserver:${GS_VERSION}
      volumes:
        - type: bind
          source: /mnt/d/CRC_DATA/GEOSERVER_DATA
          target: /opt/data/geoserver_data
        - type: bind
          source: /mnt/d/CRC_DATA/GEOSERVER_CACHE
          target: /opt/data/geoserver_cache
        - type: bind
          source: /mnt/d/CRC_DATA/postgresql
          target: /var/lib/postgresql
      ports:
        - ${GEOSERVER_PORT}:8080
      restart: on-failure
      environment:
        - GEOSERVER_DATA_DIR=/opt/data/geoserver_data
        - GEOWEBCACHE_CACHE_DIR=/opt/data/geoserver_cache
        - GEOSERVER_ADMIN_PASSWORD=geoserver
        - GEOSERVER_ADMIN_USER=admin
        - INITIAL_MEMORY=${INITIAL_MEMORY}
        - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
        - STABLE_EXTENSIONS=${STABLE_EXTENSIONS}
        - COMMUNITY_EXTENSIONS=${COMMUNITY_EXTENSIONS}
      depends_on:
        db:
          condition: service_healthy
      healthcheck:
        test: curl --fail -s http://localhost:8080/ || exit 1
        interval: 1m30s
        timeout: 10s
        retries: 3

